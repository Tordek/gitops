apiVersion: apps/v1
kind: Deployment
metadata:
  name: nagios
spec:
  selector:
    matchLabels:
      app: nagios
  template:
    metadata:
      labels:
        app: nagios
    spec:
      containers:
        - name: nagios
          image: jasonrivers/nagios:latest
          resources:
            limits:
              memory: "256Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
          envFrom:
            - configMapRef:
                name: nagios
          volumeMounts:
            - name: etc
              mountPath: "/opt/nagios/etc"
              readOnly: true
      volumes:
        - name: etc
          configMap:
            name: nagiosetc
            items:
              - key: resource.cfg
                path: etc/resource.cfg
              - key: nagios.cfg
                path: etc/nagios.cfg
              - key: templates.cfg
                path: etc/objects/templates.cfg
              - key: printer.cfg
                path: etc/objects/printer.cfg
              - key: switch.cfg
                path: etc/objects/switch.cfg
              - key: timeperiods.cfg
                path: etc/objects/timeperiods.cfg
              - key: windows.cfg
                path: etc/objects/windows.cfg
              - key: localhost.cfg
                path: etc/objects/localhost.cfg
              - key: commands.cfg
                path: etc/objects/commands.cfg
              - key: contacts.cfg
                path: etc/objects/contacts.cfg
              - key: send_nsca.cfg
                path: etc/send_nsca.cfg
              - key: htpasswd.users
                path: etc/htpasswd.users
              - key: nsca.cfg
                path: etc/nsca.cfg
              - key: cgi.cfg
                path: etc/cgi.cfg
          # startupProbe:
          #   httpGet:
          #       path: /
          #       port: 5000
          #   initialDelaySeconds: 10
          #   periodSeconds: 10
          #   failureThreshold: 50
          # livenessProbe:
          #   httpGet:
          #       path: /
          #       port: 5000
          #   initialDelaySeconds: 6
          #   periodSeconds: 6
          #   failureThreshold: 10
---
apiVersion: v1
kind: Service
metadata:
  name: nagios
spec:
  selector:
    app: nagios
  type: ClusterIP
  ports:
    - port: 80

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nagios
data:
  NAGIOS_FQDN: nagios.traitor.ar
  NAGIOS_TIMEZONE: America/Argentina/Buenos_Aires

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nagios-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: nagios.traitor.ar
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nagios
                port:
                  number: 80
  tls:
    - hosts:
        - nagios.traitor.ar
      secretName: nagios-cert
